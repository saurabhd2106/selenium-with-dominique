<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-04T14:17:36 UTC" name="Suite" finished-at="2022-02-04T14:18:03 UTC" duration-ms="27869">
    <groups>
      <group name="smoke">
        <method signature="WorkingWithChrome.verifyTitleOfThePage()[pri:1000, instance:test.WorkingWithChrome@72d1ad2e]" name="verifyTitleOfThePage" class="test.WorkingWithChrome"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="WorkingWithChrome.verifyTitleOfThePage()[pri:1000, instance:test.WorkingWithChrome@72d1ad2e]" name="verifyTitleOfThePage" class="test.WorkingWithChrome"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2022-02-04T14:17:36 UTC" name="Test" finished-at="2022-02-04T14:18:03 UTC" duration-ms="27869">
      <class name="test.AmazonTest">
        <test-method is-config="true" signature="preSetup(java.lang.String)[pri:0, instance:test.AmazonTest@1189dd52]" started-at="2022-02-04T14:17:54 UTC" name="preSetup" finished-at="2022-02-04T14:17:54 UTC" duration-ms="842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetup -->
        <test-method is-config="true" signature="setup()[pri:0, instance:test.AmazonTest@1189dd52]" started-at="2022-02-04T14:17:54 UTC" name="setup" finished-at="2022-02-04T14:17:54 UTC" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchProoduct()[pri:1, instance:test.AmazonTest@1189dd52]" started-at="2022-02-04T14:17:54 UTC" name="verifySearchProoduct" finished-at="2022-02-04T14:18:03 UTC" duration-ms="8890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchProoduct -->
        <test-method is-config="true" signature="postCleanup()[pri:0, instance:test.AmazonTest@1189dd52]" started-at="2022-02-04T14:18:03 UTC" name="postCleanup" finished-at="2022-02-04T14:18:03 UTC" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCleanup -->
      </class> <!-- test.AmazonTest -->
      <class name="test.WorkingWithChrome">
        <test-method is-config="true" signature="preSetup()[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:36 UTC" name="preSetup" finished-at="2022-02-04T14:17:36 UTC" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preSetup -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:36 UTC" name="setup" finished-at="2022-02-04T14:17:38 UTC" duration-ms="2284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="formElement(java.lang.String,java.lang.String,java.lang.String)[pri:100, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:38 UTC" name="formElement" data-provider="getData" finished-at="2022-02-04T14:17:42 UTC" duration-ms="3687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Dominique]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ouedraogo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Cypress]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formElement -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:42 UTC" name="cleanUp" finished-at="2022-02-04T14:17:42 UTC" duration-ms="152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formElement status=SUCCESS method=WorkingWithChrome.formElement(java.lang.String,java.lang.String,java.lang.String)[pri:100, instance:test.WorkingWithChrome@72d1ad2e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:42 UTC" name="setup" finished-at="2022-02-04T14:17:43 UTC" duration-ms="868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="formElement(java.lang.String,java.lang.String,java.lang.String)[pri:100, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:43 UTC" name="formElement" data-provider="getData" finished-at="2022-02-04T14:17:46 UTC" duration-ms="2790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Müller]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Maryam]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Selenium]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- formElement -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:46 UTC" name="cleanUp" finished-at="2022-02-04T14:17:46 UTC" duration-ms="139" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=formElement status=SUCCESS method=WorkingWithChrome.formElement(java.lang.String,java.lang.String,java.lang.String)[pri:100, instance:test.WorkingWithChrome@72d1ad2e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:46 UTC" name="setup" finished-at="2022-02-04T14:17:47 UTC" duration-ms="865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyDragAndDrop()[pri:100, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:47 UTC" name="verifyDragAndDrop" finished-at="2022-02-04T14:17:49 UTC" duration-ms="2615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDragAndDrop -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:49 UTC" name="cleanUp" finished-at="2022-02-04T14:17:50 UTC" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDragAndDrop status=SUCCESS method=WorkingWithChrome.verifyDragAndDrop()[pri:100, instance:test.WorkingWithChrome@72d1ad2e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:50 UTC" name="setup" finished-at="2022-02-04T14:17:50 UTC" duration-ms="848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyTitleOfThePage()[pri:1000, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:50 UTC" name="verifyTitleOfThePage" finished-at="2022-02-04T14:17:53 UTC" duration-ms="2354" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Test QA Tech Hub – Learning By Doing is the best way to learn!!!!] but found [Test QA Tech Hub – Learning By Doing is the best way to learn!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Test QA Tech Hub – Learning By Doing is the best way to learn!!!!] but found [Test QA Tech Hub – Learning By Doing is the best way to learn!]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at test.WorkingWithChrome.verifyTitleOfThePage(WorkingWithChrome.java:111)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTitleOfThePage -->
        <test-method is-config="true" signature="cleanUp(org.testng.ITestResult)[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:53 UTC" name="cleanUp" finished-at="2022-02-04T14:17:53 UTC" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTitleOfThePage status=FAILURE method=WorkingWithChrome.verifyTitleOfThePage()[pri:1000, instance:test.WorkingWithChrome@72d1ad2e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method is-config="true" signature="postCleanup()[pri:0, instance:test.WorkingWithChrome@72d1ad2e]" started-at="2022-02-04T14:17:53 UTC" name="postCleanup" finished-at="2022-02-04T14:17:54 UTC" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCleanup -->
      </class> <!-- test.WorkingWithChrome -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
